.form-control {
    height: calc(1.5em + 1.5rem + 2px);
    padding: 0.75rem 1.25rem;
    color: white;
    border: none;
    border-radius: .5rem;
    background: #2b2c39;
    transition: all 0.3s ease-in-out;
    max-width: 350px;
    text-align: right;
    font-weight: bold;
    direction: rtl;

    &:focus {
        color: white;
        border:none;
        background: darken(#2b2c39 , 1%)!important;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    }

    // Placeholder
    &::placeholder {
        color: #5c5e69;
    }

    &:disabled,
    &[readonly] {
        background: darken(#2b2c39 , 3%)!important;
    }
}

.form-group {
    text-align: right;
    direction: rtl;
    label {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
        color: white;
        object {
            margin-left: 5px;
        }
    }
}

select.form-control {
    &:focus::-ms-value {
        color: $input-color;
    }
}

.col-form-label {
    padding-top: calc(0.75rem + 1px);
    padding-bottom: calc(0.75rem + 1px);
}

.col-form-label-lg {
    padding-top: calc(1rem + 1px);
    padding-bottom: calc(1rem + 1px);
}

.col-form-label-sm {
    padding-top: calc(0.5rem + 1px);
    padding-bottom: calc(0.5rem + 1px);
}

.form-control-plaintext {
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
    color: $input-color;
}

.form-control-sm {
    height: calc(1.5em + 1rem + 2px);
    padding: 0.5rem 1.25rem;
}

.form-control-lg {
    height: calc(1.5em + 2rem + 2px);
    padding: 1rem 1.875rem;
    font-size: $font-size-lg;
    border-radius: 0.375rem;
}

.form-check-input {
    &:disabled ~ .form-check-label {
        color: $input-color;
    }
}

$form-validation-states: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$form-validation-states: map-merge(
                (
                        "valid": (
                                "color": $green,
                                "icon": $form-feedback-icon-valid
                        ),
                        "invalid": (
                                "color": $red,
                                "icon": $form-feedback-icon-invalid
                        ),
                ),
                $form-validation-states
);
@each $state, $data in $form-validation-states {
    @include form-validation-state($state, map-get($data, color), map-get($data, icon));
}
